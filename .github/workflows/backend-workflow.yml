name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-workflow.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-workflow.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd backend
          mvn clean package -DskipTests

      - name: Run Tests
        run: |
          cd backend
          mvn test

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: backend/**/target/surefire-reports/

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-jars
          path: backend/**/target/*.jar

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend
          mvn sonar:sonar -Dsonar.projectKey=finovabank-backend -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download JAR artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-jars
          path: backend

      - name: Set environment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "ENV_TAG=latest" >> $GITHUB_ENV
          else
            echo "ENV_TAG=develop" >> $GITHUB_ENV
          fi

      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./backend/api-gateway
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/api-gateway:${{ env.ENV_TAG }}

      - name: Build and push Account Management
        uses: docker/build-push-action@v4
        with:
          context: ./backend/account-management
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/account-management:${{ env.ENV_TAG }}

      - name: Build and push Transaction Service
        uses: docker/build-push-action@v4
        with:
          context: ./backend/transaction-service
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/transaction-service:${{ env.ENV_TAG }}

      - name: Build and push Loan Management
        uses: docker/build-push-action@v4
        with:
          context: ./backend/loan-management
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/loan-management:${{ env.ENV_TAG }}

      - name: Build and push Savings Goals
        uses: docker/build-push-action@v4
        with:
          context: ./backend/savings-goals
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/savings-goals:${{ env.ENV_TAG }}

      - name: Build and push Risk Assessment
        uses: docker/build-push-action@v4
        with:
          context: ./backend/risk-assessment
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/risk-assessment:${{ env.ENV_TAG }}

      - name: Build and push Compliance
        uses: docker/build-push-action@v4
        with:
          context: ./backend/compliance
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/compliance:${{ env.ENV_TAG }}

      - name: Build and push Notification Service
        uses: docker/build-push-action@v4
        with:
          context: ./backend/notification-service
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/notification-service:${{ env.ENV_TAG }}

      - name: Build and push Reporting
        uses: docker/build-push-action@v4
        with:
          context: ./backend/reporting
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/reporting:${{ env.ENV_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f infrastructure/kubernetes/namespace.yaml
          kubectl apply -f infrastructure/kubernetes/backend-deployment.yaml
          kubectl apply -f infrastructure/kubernetes/backend-service.yaml
          kubectl rollout restart deployment -n finovabank-backend
