# ci-cd/jenkins/Jenkinsfile
pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Docker Build & Push') {
            environment {
                DOCKER_REGISTRY = 'your-docker-registry'
            }
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/api-gateway", "-f api-gateway/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/account-service", "-f account-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/transaction-service", "-f transaction-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/loan-service", "-f loan-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/savings-goals-service", "-f savings-goals-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/risk-assessment-service", "-f risk-assessment-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/compliance-service", "-f compliance-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/notification-service", "-f notification-service/Dockerfile .").push('latest')
                    docker.build("${DOCKER_REGISTRY}/reporting-service", "-f reporting-service/Dockerfile .").push('latest')
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh 'kubectl apply -f infrastructure/kubernetes/namespace.yaml'
                    sh 'kubectl apply -f infrastructure/kubernetes/deployment.yaml'
                    sh 'kubectl apply -f infrastructure/kubernetes/service.yaml'
                }
            }
        }
    }
}
