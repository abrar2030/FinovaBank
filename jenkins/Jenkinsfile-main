pipeline {
    agent any
    
    environment {
        DOCKER_REGISTRY = credentials('docker-registry-url')
        DOCKER_CREDENTIALS = credentials('docker-credentials')
        KUBE_CONFIG = credentials('kubernetes-config')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Backend Pipeline') {
            steps {
                build job: 'FinovaBank-Backend-Pipeline', 
                      parameters: [
                          string(name: 'BRANCH_NAME', value: env.BRANCH_NAME)
                      ],
                      wait: true
            }
        }
        
        stage('Frontend Pipeline') {
            steps {
                build job: 'FinovaBank-Frontend-Pipeline', 
                      parameters: [
                          string(name: 'BRANCH_NAME', value: env.BRANCH_NAME)
                      ],
                      wait: true
            }
        }
        
        stage('Integration Tests') {
            when {
                expression { 
                    return env.BRANCH_NAME == 'main' || env.BRANCH_NAME == 'develop'
                }
            }
            steps {
                echo "Running integration tests"
                // Add integration test commands here
                sh 'echo "Integration tests would run here"'
            }
        }
        
        stage('Deploy All to Kubernetes') {
            when {
                branch 'main'
            }
            steps {
                script {
                    // Configure kubectl
                    sh 'mkdir -p ~/.kube'
                    sh 'echo "${KUBE_CONFIG}" > ~/.kube/config'
                    
                    // Apply Kubernetes manifests
                    sh 'kubectl apply -f infrastructure/kubernetes/namespace.yaml'
                    sh 'kubectl apply -f infrastructure/kubernetes/deployment.yaml'
                    sh 'kubectl apply -f infrastructure/kubernetes/service.yaml'
                    
                    // Verify all deployments
                    sh 'kubectl get deployments -n finovabank-backend'
                    sh 'kubectl get deployments -n finovabank-frontend'
                    sh 'kubectl get services -n finovabank-backend'
                    sh 'kubectl get services -n finovabank-frontend'
                }
            }
        }
        
        stage('Smoke Tests') {
            when {
                branch 'main'
            }
            steps {
                echo "Running smoke tests against deployed services"
                // Add smoke test commands here
                sh 'echo "Smoke tests would run here"'
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Complete pipeline completed successfully!'
            // Send notification on success
            script {
                if (env.BRANCH_NAME == 'main') {
                    // Send deployment notification
                    echo "Deployment notification would be sent here"
                }
            }
        }
        failure {
            echo 'Pipeline failed!'
            // Send notification on failure
            script {
                echo "Failure notification would be sent here"
            }
        }
    }
}
