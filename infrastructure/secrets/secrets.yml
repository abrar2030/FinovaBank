# FinovaBank Secrets Management Configuration
# This file contains encrypted secrets and configuration for secure secret management
# All secrets are encrypted using Ansible Vault and AWS KMS

---
# Kubernetes Secrets (if using Kubernetes)
apiVersion: v1
kind: Secret
metadata:
  name: finovabank-secrets
  namespace: finovabank
  labels:
    app: finovabank
    environment: production
    compliance: financial-grade
  annotations:
    vault.security.banzaicloud.io/vault-addr: "https://vault.finovabank.com:8200"
    vault.security.banzaicloud.io/vault-role: "finovabank-app"
    vault.security.banzaicloud.io/vault-skip-verify: "false"
type: Opaque
data:
  # Database credentials (base64 encoded)
  # These should be encrypted with Ansible Vault in production
  mysql-username: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    66386439653765386661326637323938366663643064623834613163383137373839616263373464
    3661353966363936303664626364363630613533333665310a663635373036353634376336643966
    6664313632386137373736323735653838373536323536623665373936373939366665663863613
    3361656361373037310a353638643435666633633964366338653539323831343864663966363464
    3833
  
  mysql-password: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    33663932643739653264336464383965643464663937643939373939643537653834373334373161
    3835333637373334353537373937353939373264653765310a373736323735653838373536323536
    6237353936373939366665663863613361656361373037310a353638643435666633633964366338
    6535393238313438646639663634643833
  
  # Redis credentials
  redis-password: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    39653264336464383965643464663937643939373939643537653834373334373161383533363737
    3334353537373937353939373264653765310a373736323735653838373536323536623735393637
    3939366665663863613361656361373037310a353638643435666633633964366338653539323831
    3438646639663634643833
  
  # JWT and encryption keys
  jwt-secret-key: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    64383965643464663937643939373939643537653834373334373161383533363737333435353537
    3337393735393937326465376531306137373632373565383837353632333536623735393637393
    9366665663863613361656361373037310a353638643435666633633964366338653539323831343
    8646639663634643833
  
  encryption-key: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    37643939373939643537653834373334373161383533363737333435353537333739373539393732
    6465376531306137373632373565383837353632333536623735393637393936366665663863613
    361656361373037310a353638643435666633633964366338653539323831343864663966363464
    3833
  
  # API keys for external services
  aws-access-key-id: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    39373939643537653834373334373161383533363737333435353537333739373539393732646537
    6531306137373632373565383837353632333536623735393637393936366665663863613361656
    361373037310a353638643435666633633964366338653539323831343864663966363464383
  
  aws-secret-access-key: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    43537653834373334373161383533363737333435353537333739373539393732646537653130613
    7373632373565383837353632333536623735393637393936366665663863613361656361373037
    310a353638643435666633633964366338653539323831343864663966363464383
  
  # SSL/TLS certificates
  tls-cert: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    84373334373161383533363737333435353537333739373539393732646537653130613737363237
    3565383837353632333536623735393637393936366665663863613361656361373037310a353638
    643435666633633964366338653539323831343864663966363464383
  
  tls-key: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    34373161383533363737333435353537333739373539393732646537653130613737363237356538
    3837353632333536623735393637393936366665663863613361656361373037310a353638643435
    666633633964366338653539323831343864663966363464383

---
# AWS Secrets Manager Configuration
aws_secrets_manager:
  region: us-west-2
  kms_key_id: alias/finovabank-encryption
  
  secrets:
    - name: finovabank/database/mysql
      description: "MySQL database credentials for FinovaBank"
      secret_string:
        username: "{{ mysql_username }}"
        password: "{{ mysql_password }}"
        host: "{{ mysql_host }}"
        port: "{{ mysql_port }}"
        database: "{{ mysql_database }}"
      tags:
        Environment: production
        Application: finovabank
        Compliance: financial-grade
        DataClassification: confidential
    
    - name: finovabank/cache/redis
      description: "Redis cache credentials for FinovaBank"
      secret_string:
        password: "{{ redis_password }}"
        host: "{{ redis_host }}"
        port: "{{ redis_port }}"
      tags:
        Environment: production
        Application: finovabank
        Compliance: financial-grade
    
    - name: finovabank/encryption/keys
      description: "Encryption keys for FinovaBank application"
      secret_string:
        jwt_secret: "{{ jwt_secret_key }}"
        encryption_key: "{{ encryption_key }}"
        signing_key: "{{ signing_key }}"
      tags:
        Environment: production
        Application: finovabank
        Compliance: financial-grade
        DataClassification: restricted
    
    - name: finovabank/external/apis
      description: "External API credentials for FinovaBank"
      secret_string:
        aws_access_key_id: "{{ aws_access_key_id }}"
        aws_secret_access_key: "{{ aws_secret_access_key }}"
        payment_gateway_api_key: "{{ payment_gateway_api_key }}"
        credit_bureau_api_key: "{{ credit_bureau_api_key }}"
      tags:
        Environment: production
        Application: finovabank
        Compliance: financial-grade
        DataClassification: confidential

---
# HashiCorp Vault Configuration
vault_config:
  address: "https://vault.finovabank.com:8200"
  auth_method: aws
  role: finovabank-app
  
  # Secret engines
  secret_engines:
    - path: finovabank/
      type: kv-v2
      description: "FinovaBank application secrets"
      config:
        max_versions: 10
        cas_required: true
        delete_version_after: "7776000s"  # 90 days
    
    - path: finovabank-pki/
      type: pki
      description: "FinovaBank PKI for internal certificates"
      config:
        max_lease_ttl: "8760h"  # 1 year
        default_lease_ttl: "720h"  # 30 days
    
    - path: finovabank-transit/
      type: transit
      description: "FinovaBank encryption as a service"
      config:
        force_no_cache: true
  
  # Policies
  policies:
    - name: finovabank-app-policy
      policy: |
        # Read application secrets
        path "finovabank/data/app/*" {
          capabilities = ["read"]
        }
        
        # Read database secrets
        path "finovabank/data/database/*" {
          capabilities = ["read"]
        }
        
        # Use transit encryption
        path "finovabank-transit/encrypt/app-data" {
          capabilities = ["update"]
        }
        
        path "finovabank-transit/decrypt/app-data" {
          capabilities = ["update"]
        }
        
        # Generate certificates
        path "finovabank-pki/issue/app-role" {
          capabilities = ["update"]
        }
    
    - name: finovabank-admin-policy
      policy: |
        # Full access to application secrets
        path "finovabank/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        }
        
        # Manage PKI
        path "finovabank-pki/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        }
        
        # Manage transit encryption
        path "finovabank-transit/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        }
  
  # Authentication methods
  auth_methods:
    - type: aws
      path: aws
      config:
        access_key: "{{ vault_aws_access_key }}"
        secret_key: "{{ vault_aws_secret_key }}"
        region: us-west-2
        iam_server_id_header_value: vault.finovabank.com
      
      roles:
        - name: finovabank-app
          auth_type: ec2
          policies: ["finovabank-app-policy"]
          max_ttl: "1h"
          allow_instance_migration: false
          bound_vpc_id: "{{ vpc_id }}"
          bound_subnet_id: "{{ private_subnet_ids }}"
        
        - name: finovabank-admin
          auth_type: iam
          policies: ["finovabank-admin-policy"]
          max_ttl: "8h"
          bound_iam_principal_arn: "arn:aws:iam::{{ aws_account_id }}:role/FinovaBankAdminRole"

---
# Secret rotation configuration
secret_rotation:
  enabled: true
  schedule: "0 2 * * 0"  # Weekly on Sunday at 2 AM
  
  rotation_policies:
    - name: database-credentials
      secrets:
        - finovabank/database/mysql
        - finovabank/cache/redis
      rotation_interval: 30  # days
      notification_days: 7   # days before expiration
      
    - name: encryption-keys
      secrets:
        - finovabank/encryption/keys
      rotation_interval: 90  # days
      notification_days: 14  # days before expiration
      
    - name: api-keys
      secrets:
        - finovabank/external/apis
      rotation_interval: 60  # days
      notification_days: 10  # days before expiration
  
  notification:
    enabled: true
    channels:
      - type: email
        recipients:
          - security@finovabank.com
          - infrastructure@finovabank.com
      - type: slack
        webhook_url: "{{ slack_webhook_url }}"
        channel: "#security-alerts"
      - type: sns
        topic_arn: "arn:aws:sns:us-west-2:{{ aws_account_id }}:finovabank-security-alerts"

---
# Secret access audit configuration
secret_audit:
  enabled: true
  log_level: info
  
  audit_rules:
    - name: secret-access
      events:
        - secret.read
        - secret.write
        - secret.delete
      destinations:
        - type: cloudwatch
          log_group: "/aws/finovabank/secret-audit"
          log_stream: "secret-access"
        - type: s3
          bucket: "finovabank-audit-logs"
          prefix: "secret-audit/"
    
    - name: authentication
      events:
        - auth.login
        - auth.logout
        - auth.failure
      destinations:
        - type: cloudwatch
          log_group: "/aws/finovabank/auth-audit"
          log_stream: "authentication"
    
    - name: policy-violations
      events:
        - policy.violation
        - access.denied
      destinations:
        - type: sns
          topic_arn: "arn:aws:sns:us-west-2:{{ aws_account_id }}:finovabank-security-alerts"
        - type: cloudwatch
          log_group: "/aws/finovabank/security-alerts"
          log_stream: "policy-violations"

---
# Backup and recovery configuration
secret_backup:
  enabled: true
  schedule: "0 1 * * *"  # Daily at 1 AM
  
  backup_destinations:
    - type: s3
      bucket: "finovabank-secret-backups"
      prefix: "vault-backups/"
      encryption: aws:kms
      kms_key_id: "alias/finovabank-encryption"
      retention_days: 2555  # 7 years for financial compliance
    
    - type: cross_region
      region: us-east-1
      bucket: "finovabank-secret-backups-dr"
      prefix: "vault-backups/"
      encryption: aws:kms
      kms_key_id: "alias/finovabank-encryption-dr"
      retention_days: 2555
  
  recovery_procedures:
    - name: vault-restore
      description: "Restore Vault from backup"
      steps:
        - "Stop Vault service"
        - "Download backup from S3"
        - "Verify backup integrity"
        - "Restore data directory"
        - "Start Vault service"
        - "Verify secret accessibility"
      
    - name: secret-recovery
      description: "Recover individual secrets"
      steps:
        - "Identify affected secrets"
        - "Retrieve from backup"
        - "Verify secret integrity"
        - "Update secret in Vault"
        - "Notify affected applications"

---
# Compliance and security controls
compliance_controls:
  encryption:
    at_rest: true
    in_transit: true
    key_management: aws_kms
    
  access_control:
    principle: least_privilege
    mfa_required: true
    session_timeout: 3600  # 1 hour
    
  audit_logging:
    enabled: true
    retention_period: 2555  # 7 years
    log_integrity: true
    
  data_classification:
    - level: public
      encryption_required: false
      access_logging: false
    - level: internal
      encryption_required: true
      access_logging: true
    - level: confidential
      encryption_required: true
      access_logging: true
      approval_required: true
    - level: restricted
      encryption_required: true
      access_logging: true
      approval_required: true
      dual_control: true

---
# Emergency access procedures
emergency_access:
  enabled: true
  
  break_glass_accounts:
    - name: emergency-admin-1
      role: vault-admin
      justification_required: true
      approval_required: true
      session_recording: true
      max_duration: 4  # hours
      
    - name: emergency-admin-2
      role: vault-admin
      justification_required: true
      approval_required: true
      session_recording: true
      max_duration: 4  # hours
  
  procedures:
    - name: emergency-secret-access
      description: "Emergency access to critical secrets"
      triggers:
        - "Production system outage"
        - "Security incident response"
        - "Disaster recovery"
      steps:
        - "Obtain management approval"
        - "Document justification"
        - "Activate break-glass account"
        - "Access required secrets"
        - "Complete incident documentation"
        - "Revoke emergency access"
        - "Conduct post-incident review"
  
  notification:
    immediate:
      - security@finovabank.com
      - ciso@finovabank.com
    channels:
      - email
      - sms
      - slack

