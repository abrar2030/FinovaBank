{"ast":null,"code":"// src/services/API.js\nimport axios from'axios';import AuthService from'./AuthService';import{API_BASE_URL}from'../Config';// Adjust the import path as needed\nconst API=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add the auth token to headers\nAPI.interceptors.request.use(config=>{const user=AuthService.getCurrentUser();if(user&&user.token){config.headers['Authorization']='Bearer '+user.token;}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle any response errors globally\nAPI.interceptors.response.use(response=>response,error=>{console.error('API call error:',error);// Handle 401 Unauthorized errors by logging out the user\nif(error.response&&error.response.status===401){AuthService.logout();// Optionally, redirect to the login page\nwindow.location.href='/login';}return Promise.reject(error);});export default API;","map":{"version":3,"names":["axios","AuthService","API_BASE_URL","API","create","baseURL","headers","interceptors","request","use","config","user","getCurrentUser","token","error","Promise","reject","response","console","status","logout","window","location","href"],"sources":["/mnt/c/Users/36202/OneDrive/Desktop/FinovaBank/frontend/src/services/API.js"],"sourcesContent":["// src/services/API.js\n\nimport axios from 'axios';\nimport AuthService from './AuthService';\nimport { API_BASE_URL } from '../Config'; // Adjust the import path as needed\n\nconst API = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add the auth token to headers\nAPI.interceptors.request.use(\n  (config) => {\n    const user = AuthService.getCurrentUser();\n    if (user && user.token) {\n      config.headers['Authorization'] = 'Bearer ' + user.token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle any response errors globally\nAPI.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API call error:', error);\n\n    // Handle 401 Unauthorized errors by logging out the user\n    if (error.response && error.response.status === 401) {\n      AuthService.logout();\n      // Optionally, redirect to the login page\n      window.location.href = '/login';\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default API;\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,OAASC,YAAY,KAAQ,WAAW,CAAE;AAE1C,KAAM,CAAAC,GAAG,CAAGH,KAAK,CAACI,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,IAAI,CAAGV,WAAW,CAACW,cAAc,CAAC,CAAC,CACzC,GAAID,IAAI,EAAIA,IAAI,CAACE,KAAK,CAAE,CACtBH,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,CAAG,SAAS,CAAGK,IAAI,CAACE,KAAK,CAC1D,CACA,MAAO,CAAAH,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,CACTI,OAAO,CAACJ,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CAEvC;AACA,GAAIA,KAAK,CAACG,QAAQ,EAAIH,KAAK,CAACG,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACnDlB,WAAW,CAACmB,MAAM,CAAC,CAAC,CACpB;AACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CAEA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}