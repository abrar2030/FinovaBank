{"ast":null,"code":"import React,{useState,useEffect}from'react';import api from'../services/API';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransactionList=()=>{const[transactions,setTransactions]=useState([]);useEffect(()=>{const fetchTransactions=async()=>{try{const response=await api.get('/transactions');setTransactions(response.data);}catch(error){console.error(\"Error fetching transactions:\",error);}};fetchTransactions();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Transactions\"}),transactions.length>0?/*#__PURE__*/_jsx(\"ul\",{children:transactions.map(transaction=>/*#__PURE__*/_jsxs(\"li\",{children:[transaction.date,\": $\",transaction.amount,\" - \",transaction.type]},transaction.id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No transactions available.\"})]});};export default TransactionList;","map":{"version":3,"names":["React","useState","useEffect","api","jsx","_jsx","jsxs","_jsxs","TransactionList","transactions","setTransactions","fetchTransactions","response","get","data","error","console","className","children","length","map","transaction","date","amount","type","id"],"sources":["/mnt/c/Users/36202/OneDrive/Desktop/FinovaBank/frontend/src/components/TransactionList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/API';\n\nconst TransactionList = () => {\n    const [transactions, setTransactions] = useState([]);\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            try {\n                const response = await api.get('/transactions');\n                setTransactions(response.data);\n            } catch (error) {\n                console.error(\"Error fetching transactions:\", error);\n            }\n        };\n        fetchTransactions();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <h2>Transactions</h2>\n            {transactions.length > 0 ? (\n                <ul>\n                    {transactions.map((transaction) => (\n                        <li key={transaction.id}>\n                            {transaction.date}: ${transaction.amount} - {transaction.type}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No transactions available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default TransactionList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,GAAG,CAACU,GAAG,CAAC,eAAe,CAAC,CAC/CH,eAAe,CAACE,QAAQ,CAACE,IAAI,CAAC,CAClC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CACDJ,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIJ,KAAA,QAAKU,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBb,IAAA,OAAAa,QAAA,CAAI,cAAY,CAAI,CAAC,CACpBT,YAAY,CAACU,MAAM,CAAG,CAAC,cACpBd,IAAA,OAAAa,QAAA,CACKT,YAAY,CAACW,GAAG,CAAEC,WAAW,eAC1Bd,KAAA,OAAAW,QAAA,EACKG,WAAW,CAACC,IAAI,CAAC,KAAG,CAACD,WAAW,CAACE,MAAM,CAAC,KAAG,CAACF,WAAW,CAACG,IAAI,GADxDH,WAAW,CAACI,EAEjB,CACP,CAAC,CACF,CAAC,cAELpB,IAAA,MAAAa,QAAA,CAAG,4BAA0B,CAAG,CACnC,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}