{"ast":null,"code":"// src/services/AuthService.js\n\nimport API from './API';\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  },\n  register: async (email, password) => {\n    try {\n      const response = await API.post('/auth/register', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["API","AuthService","login","email","password","response","post","data","token","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","Error","message","register","_error$response2","_error$response2$data","logout","removeItem","getCurrentUser","parse","getItem"],"sources":["/mnt/c/Users/36202/OneDrive/Desktop/FinovaBank/frontend/src/services/AuthService.js"],"sourcesContent":["// src/services/AuthService.js\n\nimport API from './API';\n\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/auth/login', {\n        email,\n        password,\n      });\n      if (response.data.token) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  },\n\n  register: async (email, password) => {\n    try {\n      const response = await API.post('/auth/register', {\n        email,\n        password,\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: () => {\n    return JSON.parse(localStorage.getItem('user'));\n  },\n};\n\nexport default AuthService;\n"],"mappings":"AAAA;;AAEA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAC7CH,KAAK;QACLC;MACF,CAAC,CAAC;MACF,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,cAAc,CAAC;IAClE;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOf,KAAK,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAE;QAChDH,KAAK;QACLC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIJ,KAAK,CAAC,EAAAG,gBAAA,GAAAN,KAAK,CAACR,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBH,OAAO,KAAI,qBAAqB,CAAC;IACzE;EACF,CAAC;EAEDI,MAAM,EAAEA,CAAA,KAAM;IACZZ,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOZ,IAAI,CAACa,KAAK,CAACf,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;AACF,CAAC;AAED,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}